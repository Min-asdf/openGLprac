#include <GL/freeglut.h>

//변수 선언
//flatshaded, wireframed을 토글링하기 위한 부울 변수
int FlatShaded = 0;
int Wireframed = 0;

//마우스 움직임으로 시점 변환하기 위한 변수
int ViewX = 0;
int ViewY = 0;

//함수 선언
void MyDisplay();
void InitLight();
void MyMouseMove(GLint X, GLint Y);
void MyKeyboard(unsigned char KeyPressed, int X, int Y);
void MyReshape(int w, int h);


//메인 함수
int main(int argc, char** argv) {
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA | GLUT_DEPTH);
	glutInitWindowSize(400, 400);
	glutInitWindowPosition(0, 0);
	glutCreateWindow("OpenGL Camera Rotate Sample");
	glClearColor(0.4, 0.4, 0.4, 0.0);

	InitLight();

	//콜백 함수 등록
	glutDisplayFunc(MyDisplay);
	glutKeyboardFunc(MyKeyboard);
	glutMotionFunc(MyMouseMove);
	glutReshapeFunc(MyReshape);
	glutMainLoop();

	return 0;
}

//그리기 함수
void MyDisplay() {
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
	//시점 변경 변수 수정 필요
	gluLookAt(0.0, 0.0, 0.0, ViewX, ViewY, -1.0, 1.0, 1.0, 0.0);
	glutSolidTeapot(0.2);
	
	glFlush();
}

//조명 함수
void InitLight() {
	GLfloat mat_diffuse[] = { 0.5, 0.4, 0.3, 1.0 };
	GLfloat mat_specular[] = { 1.0, 1.0, 1.0, 1.0 };
	GLfloat mat_ambient[] = { 0.5, 0.4, 0.3, 1.0 };
	GLfloat mat_shininess[] = { 15.0 };
	GLfloat light_diffuse[] = { 0.8, 0.8, 0.8, 1.0 };
	GLfloat light_specular[] = { 1.0, 1.0, 1.0, 1.0 };
	GLfloat light_ambient[] = { 0.3, 0.3, 0.3, 1.0 };
	GLfloat light_position[] = { -3, 6, 3.0, 0.0 };

	glShadeModel(GL_SMOOTH);
	glEnable(GL_DEPTH_TEST);
	glEnable(GL_LIGHTING);
	glEnable(GL_LIGHT0);
	glLightfv(GL_LIGHT0, GL_POSITION, light_position);
	glLightfv(GL_LIGHT0, GL_DIFFUSE, light_diffuse);
	glLightfv(GL_LIGHT0, GL_SPECULAR, light_specular);
	glLightfv(GL_LIGHT0, GL_AMBIENT, light_ambient);
	
	glMaterialfv(GL_FRONT, GL_DIFFUSE, mat_diffuse);
	glMaterialfv(GL_FRONT, GL_SPECULAR, mat_specular);
	glMaterialfv(GL_FRONT, GL_AMBIENT, mat_ambient);
	glMaterialfv(GL_FRONT, GL_SHININESS, mat_shininess);
}

//마우스 움직임 함수
void MyMouseMove(GLint X, GLint Y) {
	ViewX = X;
	ViewY = Y;
	glutPostRedisplay();
}

//키보드 입력 함수
void MyKeyboard(unsigned char KeyPressed, int X, int Y) {
	switch (KeyPressed) {
		//Q 누를 시 종료
	case 'Q':
		exit(0);
		break;

		//q 누를 시 종료
	case 'q':
		exit(0);
		break;

		//esc 누를 시 종료
	case 27:
		exit(0);
		break;
		//s 누를 시 flatShaded 모드
	case 's':
		if (FlatShaded) {
			FlatShaded = 0;
			glShadeModel(GL_SMOOTH);
		}
		else {
			FlatShaded = 1;
			glShadeModel(GL_FLAT);
		}
		//w 누를 시 wireFramed 모드
	case 'w':
		if (Wireframed) {
			Wireframed = 0;
			glPolygonMode(GL_FRONT_AND_BACK, GL_FILL);
		}
		else {
			Wireframed = 1;
			glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);
		}

		glutPostRedisplay();
		break;
	}
}

//창 Reshape 함수
void MyReshape(int w, int h) {
	glViewport(0, 0, (GLsizei)w, (GLsizei)h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	glOrtho(-1.0, 1.0, -1.0, 1.0, -1.0, 1.0);
}
